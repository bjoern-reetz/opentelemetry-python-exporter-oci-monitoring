[project]
name = "opentelemetry-exporter-oci-monitoring"
version = "0.2.1"
requires-python = ">=3.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
version_files = ["pyproject.toml:version"]
update_changelog_on_bump = true
major_version_zero = true
pre_bump_hooks = ["poetry run pytest", "scripts/regenerate-badges.sh"]

[tool.coverage.run]
source = ["src", "tests"]

[tool.poetry]
name = "opentelemetry-exporter-oci-monitoring"
version = "0.2.1"
description = ""
authors = ["Bj√∂rn Reetz <git@bjoern-reetz.de>"]
readme = "README.md"
packages = [{include = "opentelemetry_exporter_oci_monitoring", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
opentelemetry-sdk = "^1.25.0"
oci = "^2.129.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pybadges = "^3.0.1"
hypothesis = "^6.105.0"
setuptools = "^71.0.4"

[tool.poetry.group.pyright]
optional = true

[tool.poetry.group.pyright.dependencies]
pyright = "^1.1.372"

[tool.pyright]
strict = ["src", "tests"]
pythonVersion = "3.8"
pythonPlatform = "All"
# reportCallInDefaultInitializer = "warning"  # use ruff B008 instead
# reportImplicitOverride = "warning"  # requires Python >= 3.12
# reportImplicitStringConcatenation = "warning"  # use ruff ISC instead
reportImportCycles = "warning"
reportMissingSuperCall = "warning"
reportPropertyTypeMismatch = "warning"
# reportShadowedImports = "warning"  # use ruff A0 instead
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedCallResult = "warning"

[tool.pytest.ini_options]
addopts = [
    "--cov",
    "--cov-report=term:skip-covered",
    "--import-mode=importlib",
    "--strict-config",
    "--strict-markers",
]
pythonpath = ["."]
testpaths = ["tests"]

[tool.ruff]
src = ["src", "tests", "pyproject.toml"]

[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D1",  # missing docstrings
    # taken from https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",  # tab-indentation
    "E111",  # indentation-with-invalid-multiple
    "E114",  # indentation-with-invalid-multiple-comment
    "E117",  # over-indented
    "D206",  # indent-with-spaces
    "D300",  # triple-single-quotes
    "Q000",  # bad-quotes-inline-string
    "Q001",  # bad-quotes-multiline-string
    "Q002",  # bad-quotes-docstring
    "Q003",  # avoidable-escaped-quote
    "COM812",  # missing-trailing-comma
    "COM819",  # prohibited-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
    "ISC002",  # multi-line-implicit-string-concatenation
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"tests/**/test_*.py" = ["S101", "SLF001"]
"tests/strategies.py" = ["B008"]

[tool.ruff.lint.pydocstyle]
convention = "google"
